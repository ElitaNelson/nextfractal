/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.nextbreakpoint.nextfractal.cfdg.analysis;

import java.util.Hashtable;

import com.nextbreakpoint.nextfractal.cfdg.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    @Override
	public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    @Override
	public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    @Override
	public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    @Override
	public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    @Override
	public void caseStart(Start node)
    {
        defaultCase(node);
    }

    @Override
	public void caseACfdg(ACfdg node)
    {
        defaultCase(node);
    }

    @Override
	public void caseASizeSizeToken2(ASizeSizeToken2 node)
    {
        defaultCase(node);
    }

    @Override
	public void caseASizeTokenSizeToken2(ASizeTokenSizeToken2 node)
    {
        defaultCase(node);
    }

    @Override
	public void caseAStartshapeCfdgDeclaration(AStartshapeCfdgDeclaration node)
    {
        defaultCase(node);
    }

    @Override
	public void caseAIncludeCfdgDeclaration(AIncludeCfdgDeclaration node)
    {
        defaultCase(node);
    }

    @Override
	public void caseABackgroundCfdgDeclaration(ABackgroundCfdgDeclaration node)
    {
        defaultCase(node);
    }

    @Override
	public void caseATileCfdgDeclaration(ATileCfdgDeclaration node)
    {
        defaultCase(node);
    }

    @Override
	public void caseASizeCfdgDeclaration(ASizeCfdgDeclaration node)
    {
        defaultCase(node);
    }

    @Override
	public void caseARuleCfdgDeclaration(ARuleCfdgDeclaration node)
    {
        defaultCase(node);
    }

    @Override
	public void caseAPathCfdgDeclaration(APathCfdgDeclaration node)
    {
        defaultCase(node);
    }

    @Override
	public void caseAStartshapeDeclaration(AStartshapeDeclaration node)
    {
        defaultCase(node);
    }

    @Override
	public void caseAIncludeDeclaration(AIncludeDeclaration node)
    {
        defaultCase(node);
    }

    @Override
	public void caseABackgroundDeclaration(ABackgroundDeclaration node)
    {
        defaultCase(node);
    }

    @Override
	public void caseATileDeclaration(ATileDeclaration node)
    {
        defaultCase(node);
    }

    @Override
	public void caseASizeDeclaration(ASizeDeclaration node)
    {
        defaultCase(node);
    }

    @Override
	public void caseARuleDeclaration(ARuleDeclaration node)
    {
        defaultCase(node);
    }

    @Override
	public void caseAUnorderedShapeReplacementDeclaration(AUnorderedShapeReplacementDeclaration node)
    {
        defaultCase(node);
    }

    @Override
	public void caseAOrderedShapeReplacementDeclaration(AOrderedShapeReplacementDeclaration node)
    {
        defaultCase(node);
    }

    @Override
	public void caseASingleShapeReplacementDeclaration(ASingleShapeReplacementDeclaration node)
    {
        defaultCase(node);
    }

    @Override
	public void caseAUnorderedShapeReplacement(AUnorderedShapeReplacement node)
    {
        defaultCase(node);
    }

    @Override
	public void caseAOrderedShapeReplacement(AOrderedShapeReplacement node)
    {
        defaultCase(node);
    }

    @Override
	public void caseABasicShapeReplacementBlock(ABasicShapeReplacementBlock node)
    {
        defaultCase(node);
    }

    @Override
	public void caseAListShapeReplacementBlock(AListShapeReplacementBlock node)
    {
        defaultCase(node);
    }

    @Override
	public void caseAStarOperator(AStarOperator node)
    {
        defaultCase(node);
    }

    @Override
	public void caseAPlusOperator(APlusOperator node)
    {
        defaultCase(node);
    }

    @Override
	public void caseAMinusOperator(AMinusOperator node)
    {
        defaultCase(node);
    }

    @Override
	public void caseASlashOperator(ASlashOperator node)
    {
        defaultCase(node);
    }

    @Override
	public void caseAArrowOperator(AArrowOperator node)
    {
        defaultCase(node);
    }

    @Override
	public void caseAPathOperation(APathOperation node)
    {
        defaultCase(node);
    }

    @Override
	public void caseAUnorderedPathCommand(AUnorderedPathCommand node)
    {
        defaultCase(node);
    }

    @Override
	public void caseAOrderedPathCommand(AOrderedPathCommand node)
    {
        defaultCase(node);
    }

    @Override
	public void caseAPathDeclaration(APathDeclaration node)
    {
        defaultCase(node);
    }

    @Override
	public void caseAUnorderedPathReplacementDeclaration(AUnorderedPathReplacementDeclaration node)
    {
        defaultCase(node);
    }

    @Override
	public void caseAOrderedPathReplacementDeclaration(AOrderedPathReplacementDeclaration node)
    {
        defaultCase(node);
    }

    @Override
	public void caseASinglePathReplacementDeclaration(ASinglePathReplacementDeclaration node)
    {
        defaultCase(node);
    }

    @Override
	public void caseAOperationPathReplacement(AOperationPathReplacement node)
    {
        defaultCase(node);
    }

    @Override
	public void caseACommandPathReplacement(ACommandPathReplacement node)
    {
        defaultCase(node);
    }

    @Override
	public void caseABasicPathReplacementBlock(ABasicPathReplacementBlock node)
    {
        defaultCase(node);
    }

    @Override
	public void caseAListPathReplacementBlock(AListPathReplacementBlock node)
    {
        defaultCase(node);
    }

    @Override
	public void caseAXOperationParameter(AXOperationParameter node)
    {
        defaultCase(node);
    }

    @Override
	public void caseAYOperationParameter(AYOperationParameter node)
    {
        defaultCase(node);
    }

    @Override
	public void caseAX1OperationParameter(AX1OperationParameter node)
    {
        defaultCase(node);
    }

    @Override
	public void caseAY1OperationParameter(AY1OperationParameter node)
    {
        defaultCase(node);
    }

    @Override
	public void caseAX2OperationParameter(AX2OperationParameter node)
    {
        defaultCase(node);
    }

    @Override
	public void caseAY2OperationParameter(AY2OperationParameter node)
    {
        defaultCase(node);
    }

    @Override
	public void caseARxOperationParameter(ARxOperationParameter node)
    {
        defaultCase(node);
    }

    @Override
	public void caseARyOperationParameter(ARyOperationParameter node)
    {
        defaultCase(node);
    }

    @Override
	public void caseARotateOperationParameter(ARotateOperationParameter node)
    {
        defaultCase(node);
    }

    @Override
	public void caseAParametersOperationParameter(AParametersOperationParameter node)
    {
        defaultCase(node);
    }

    @Override
	public void caseAColorCommandParameter(AColorCommandParameter node)
    {
        defaultCase(node);
    }

    @Override
	public void caseAGeometryCommandParameter(AGeometryCommandParameter node)
    {
        defaultCase(node);
    }

    @Override
	public void caseAStrokeCommandParameter(AStrokeCommandParameter node)
    {
        defaultCase(node);
    }

    @Override
	public void caseAParametersCommandParameter(AParametersCommandParameter node)
    {
        defaultCase(node);
    }

    @Override
	public void caseAHueBackgroundAdjustment(AHueBackgroundAdjustment node)
    {
        defaultCase(node);
    }

    @Override
	public void caseABrightnessBackgroundAdjustment(ABrightnessBackgroundAdjustment node)
    {
        defaultCase(node);
    }

    @Override
	public void caseASaturationBackgroundAdjustment(ASaturationBackgroundAdjustment node)
    {
        defaultCase(node);
    }

    @Override
	public void caseAAlphaBackgroundAdjustment(AAlphaBackgroundAdjustment node)
    {
        defaultCase(node);
    }

    @Override
	public void caseAXTileAdjustment(AXTileAdjustment node)
    {
        defaultCase(node);
    }

    @Override
	public void caseAYTileAdjustment(AYTileAdjustment node)
    {
        defaultCase(node);
    }

    @Override
	public void caseATileAdjustment(ATileAdjustment node)
    {
        defaultCase(node);
    }

    @Override
	public void caseAXSizeAdjustment(AXSizeAdjustment node)
    {
        defaultCase(node);
    }

    @Override
	public void caseAYSizeAdjustment(AYSizeAdjustment node)
    {
        defaultCase(node);
    }

    @Override
	public void caseASizeSizeAdjustment(ASizeSizeAdjustment node)
    {
        defaultCase(node);
    }

    @Override
	public void caseAColorShapeAdjustment(AColorShapeAdjustment node)
    {
        defaultCase(node);
    }

    @Override
	public void caseAGeometryShapeAdjustment(AGeometryShapeAdjustment node)
    {
        defaultCase(node);
    }

    @Override
	public void caseACurrentColorAdjustment(ACurrentColorAdjustment node)
    {
        defaultCase(node);
    }

    @Override
	public void caseATargetColorAdjustment(ATargetColorAdjustment node)
    {
        defaultCase(node);
    }

    @Override
	public void caseAHueCurrentColorAdjustment(AHueCurrentColorAdjustment node)
    {
        defaultCase(node);
    }

    @Override
	public void caseABrightnessCurrentColorAdjustment(ABrightnessCurrentColorAdjustment node)
    {
        defaultCase(node);
    }

    @Override
	public void caseASaturationCurrentColorAdjustment(ASaturationCurrentColorAdjustment node)
    {
        defaultCase(node);
    }

    @Override
	public void caseAAlphaCurrentColorAdjustment(AAlphaCurrentColorAdjustment node)
    {
        defaultCase(node);
    }

    @Override
	public void caseAHueTargetColorAdjustment(AHueTargetColorAdjustment node)
    {
        defaultCase(node);
    }

    @Override
	public void caseABrightnessTargetColorAdjustment(ABrightnessTargetColorAdjustment node)
    {
        defaultCase(node);
    }

    @Override
	public void caseASaturationTargetColorAdjustment(ASaturationTargetColorAdjustment node)
    {
        defaultCase(node);
    }

    @Override
	public void caseAAlphaTargetColorAdjustment(AAlphaTargetColorAdjustment node)
    {
        defaultCase(node);
    }

    @Override
	public void caseAXPathAdjustment(AXPathAdjustment node)
    {
        defaultCase(node);
    }

    @Override
	public void caseAYPathAdjustment(AYPathAdjustment node)
    {
        defaultCase(node);
    }

    @Override
	public void caseASizePathAdjustment(ASizePathAdjustment node)
    {
        defaultCase(node);
    }

    @Override
	public void caseASize2PathAdjustment(ASize2PathAdjustment node)
    {
        defaultCase(node);
    }

    @Override
	public void caseAFlipPathAdjustment(AFlipPathAdjustment node)
    {
        defaultCase(node);
    }

    @Override
	public void caseASkewPathAdjustment(ASkewPathAdjustment node)
    {
        defaultCase(node);
    }

    @Override
	public void caseARotatePathAdjustment(ARotatePathAdjustment node)
    {
        defaultCase(node);
    }

    @Override
	public void caseAXGeometryAdjustment(AXGeometryAdjustment node)
    {
        defaultCase(node);
    }

    @Override
	public void caseAYGeometryAdjustment(AYGeometryAdjustment node)
    {
        defaultCase(node);
    }

    @Override
	public void caseAZGeometryAdjustment(AZGeometryAdjustment node)
    {
        defaultCase(node);
    }

    @Override
	public void caseASizeGeometryAdjustment(ASizeGeometryAdjustment node)
    {
        defaultCase(node);
    }

    @Override
	public void caseASize2GeometryAdjustment(ASize2GeometryAdjustment node)
    {
        defaultCase(node);
    }

    @Override
	public void caseASize3GeometryAdjustment(ASize3GeometryAdjustment node)
    {
        defaultCase(node);
    }

    @Override
	public void caseAFlipGeometryAdjustment(AFlipGeometryAdjustment node)
    {
        defaultCase(node);
    }

    @Override
	public void caseASkewGeometryAdjustment(ASkewGeometryAdjustment node)
    {
        defaultCase(node);
    }

    @Override
	public void caseARotateGeometryAdjustment(ARotateGeometryAdjustment node)
    {
        defaultCase(node);
    }

    @Override
	public void caseANumberExpression(ANumberExpression node)
    {
        defaultCase(node);
    }

    @Override
	public void caseANestedExpression(ANestedExpression node)
    {
        defaultCase(node);
    }

    @Override
	public void caseAFunctionExpression(AFunctionExpression node)
    {
        defaultCase(node);
    }

    @Override
	public void caseANumberExtendedExpression(ANumberExtendedExpression node)
    {
        defaultCase(node);
    }

    @Override
	public void caseAFunctionExtendedExpression(AFunctionExtendedExpression node)
    {
        defaultCase(node);
    }

    @Override
	public void caseANestedExtendedExpression(ANestedExtendedExpression node)
    {
        defaultCase(node);
    }

    @Override
	public void caseAComposedExtendedExpression(AComposedExtendedExpression node)
    {
        defaultCase(node);
    }

    @Override
	public void caseAArg0Function(AArg0Function node)
    {
        defaultCase(node);
    }

    @Override
	public void caseAArg1Function(AArg1Function node)
    {
        defaultCase(node);
    }

    @Override
	public void caseAArg2Function(AArg2Function node)
    {
        defaultCase(node);
    }

    @Override
	public void caseAFirstExpression(AFirstExpression node)
    {
        defaultCase(node);
    }

    @Override
	public void caseASecondExpression(ASecondExpression node)
    {
        defaultCase(node);
    }

    @Override
	public void caseAThirdExpression(AThirdExpression node)
    {
        defaultCase(node);
    }

    @Override
	public void caseTBar(TBar node)
    {
        defaultCase(node);
    }

    @Override
	public void caseTStar(TStar node)
    {
        defaultCase(node);
    }

    @Override
	public void caseTPlus(TPlus node)
    {
        defaultCase(node);
    }

    @Override
	public void caseTMinus(TMinus node)
    {
        defaultCase(node);
    }

    @Override
	public void caseTSlash(TSlash node)
    {
        defaultCase(node);
    }

    @Override
	public void caseTArrow(TArrow node)
    {
        defaultCase(node);
    }

    @Override
	public void caseTComma(TComma node)
    {
        defaultCase(node);
    }

    @Override
	public void caseTLCbkt(TLCbkt node)
    {
        defaultCase(node);
    }

    @Override
	public void caseTRCbkt(TRCbkt node)
    {
        defaultCase(node);
    }

    @Override
	public void caseTLRbkt(TLRbkt node)
    {
        defaultCase(node);
    }

    @Override
	public void caseTRRbkt(TRRbkt node)
    {
        defaultCase(node);
    }

    @Override
	public void caseTLSbkt(TLSbkt node)
    {
        defaultCase(node);
    }

    @Override
	public void caseTRSbkt(TRSbkt node)
    {
        defaultCase(node);
    }

    @Override
	public void caseTHueToken(THueToken node)
    {
        defaultCase(node);
    }

    @Override
	public void caseTSaturationToken(TSaturationToken node)
    {
        defaultCase(node);
    }

    @Override
	public void caseTBrightnessToken(TBrightnessToken node)
    {
        defaultCase(node);
    }

    @Override
	public void caseTAlphaToken(TAlphaToken node)
    {
        defaultCase(node);
    }

    @Override
	public void caseTTargetHueToken(TTargetHueToken node)
    {
        defaultCase(node);
    }

    @Override
	public void caseTTargetSaturationToken(TTargetSaturationToken node)
    {
        defaultCase(node);
    }

    @Override
	public void caseTTargetBrightnessToken(TTargetBrightnessToken node)
    {
        defaultCase(node);
    }

    @Override
	public void caseTTargetAlphaToken(TTargetAlphaToken node)
    {
        defaultCase(node);
    }

    @Override
	public void caseTXToken(TXToken node)
    {
        defaultCase(node);
    }

    @Override
	public void caseTYToken(TYToken node)
    {
        defaultCase(node);
    }

    @Override
	public void caseTZToken(TZToken node)
    {
        defaultCase(node);
    }

    @Override
	public void caseTRotateToken(TRotateToken node)
    {
        defaultCase(node);
    }

    @Override
	public void caseTSizeToken(TSizeToken node)
    {
        defaultCase(node);
    }

    @Override
	public void caseTFlipToken(TFlipToken node)
    {
        defaultCase(node);
    }

    @Override
	public void caseTSkewToken(TSkewToken node)
    {
        defaultCase(node);
    }

    @Override
	public void caseTParametersToken(TParametersToken node)
    {
        defaultCase(node);
    }

    @Override
	public void caseTStrokewidthToken(TStrokewidthToken node)
    {
        defaultCase(node);
    }

    @Override
	public void caseTX1Token(TX1Token node)
    {
        defaultCase(node);
    }

    @Override
	public void caseTY1Token(TY1Token node)
    {
        defaultCase(node);
    }

    @Override
	public void caseTX2Token(TX2Token node)
    {
        defaultCase(node);
    }

    @Override
	public void caseTY2Token(TY2Token node)
    {
        defaultCase(node);
    }

    @Override
	public void caseTRxToken(TRxToken node)
    {
        defaultCase(node);
    }

    @Override
	public void caseTRyToken(TRyToken node)
    {
        defaultCase(node);
    }

    @Override
	public void caseTCommand(TCommand node)
    {
        defaultCase(node);
    }

    @Override
	public void caseTOperation(TOperation node)
    {
        defaultCase(node);
    }

    @Override
	public void caseTFunctionArg0(TFunctionArg0 node)
    {
        defaultCase(node);
    }

    @Override
	public void caseTFunctionArg1(TFunctionArg1 node)
    {
        defaultCase(node);
    }

    @Override
	public void caseTFunctionArg2(TFunctionArg2 node)
    {
        defaultCase(node);
    }

    @Override
	public void caseTStartshape(TStartshape node)
    {
        defaultCase(node);
    }

    @Override
	public void caseTBackground(TBackground node)
    {
        defaultCase(node);
    }

    @Override
	public void caseTInclude(TInclude node)
    {
        defaultCase(node);
    }

    @Override
	public void caseTTile(TTile node)
    {
        defaultCase(node);
    }

    @Override
	public void caseTSize(TSize node)
    {
        defaultCase(node);
    }

    @Override
	public void caseTRule(TRule node)
    {
        defaultCase(node);
    }

    @Override
	public void caseTPath(TPath node)
    {
        defaultCase(node);
    }

    @Override
	public void caseTFilename(TFilename node)
    {
        defaultCase(node);
    }

    @Override
	public void caseTString(TString node)
    {
        defaultCase(node);
    }

    @Override
	public void caseTNumber(TNumber node)
    {
        defaultCase(node);
    }

    @Override
	public void caseTWhiteSpace(TWhiteSpace node)
    {
        defaultCase(node);
    }

    @Override
	public void caseTLineComment(TLineComment node)
    {
        defaultCase(node);
    }

    @Override
	public void caseTBlockComment(TBlockComment node)
    {
        defaultCase(node);
    }

    @Override
	public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}

// Generated from Mandelbrot.g4 by ANTLR 4.2.2
package com.nextbreakpoint.nextfractal.mandelbrot.grammar;
 

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class MandelbrotLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__41=1, T__40=2, T__39=3, T__38=4, T__37=5, T__36=6, T__35=7, T__34=8, 
		T__33=9, T__32=10, T__31=11, T__30=12, T__29=13, T__28=14, T__27=15, T__26=16, 
		T__25=17, T__24=18, T__23=19, T__22=20, T__21=21, T__20=22, T__19=23, 
		T__18=24, T__17=25, T__16=26, T__15=27, T__14=28, T__13=29, T__12=30, 
		T__11=31, T__10=32, T__9=33, T__8=34, T__7=35, T__6=36, T__5=37, T__4=38, 
		T__3=39, T__2=40, T__1=41, T__0=42, FRACTAL=43, ORBIT=44, TRAP=45, CONDITION=46, 
		BEGIN=47, LOOP=48, END=49, COLOR=50, PALETTE=51, RULE=52, USER_ARGB=53, 
		USER_RATIONAL=54, USER_INTEGER=55, USER_PATHOP_1POINTS=56, USER_PATHOP_2POINTS=57, 
		USER_VARIABLE=58, COMMENT=59, WHITESPACE=60;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"'/'", "'cos'", "';'", "'{'", "'='", "'}'", "'asin'", "'mod2'", "'^'", 
		"'im'", "'?'", "'sin'", "'<='", "'pow'", "'~?'", "'&'", "'('", "'*'", 
		"','", "'pha'", "'re'", "'atan'", "'sqrt'", "'tan'", "'atan2'", "'mod'", 
		"'>='", "'['", "'log'", "'|'", "'<'", "']'", "'>'", "'<>'", "'#'", "'acos'", 
		"'i'", "')'", "'exp'", "'+'", "'hypot'", "'-'", "'fractal'", "'orbit'", 
		"'trap'", "'condition'", "'begin'", "'loop'", "'end'", "'color'", "'palette'", 
		"'rule'", "USER_ARGB", "USER_RATIONAL", "USER_INTEGER", "USER_PATHOP_1POINTS", 
		"USER_PATHOP_2POINTS", "USER_VARIABLE", "COMMENT", "WHITESPACE"
	};
	public static final String[] ruleNames = {
		"T__41", "T__40", "T__39", "T__38", "T__37", "T__36", "T__35", "T__34", 
		"T__33", "T__32", "T__31", "T__30", "T__29", "T__28", "T__27", "T__26", 
		"T__25", "T__24", "T__23", "T__22", "T__21", "T__20", "T__19", "T__18", 
		"T__17", "T__16", "T__15", "T__14", "T__13", "T__12", "T__11", "T__10", 
		"T__9", "T__8", "T__7", "T__6", "T__5", "T__4", "T__3", "T__2", "T__1", 
		"T__0", "FRACTAL", "ORBIT", "TRAP", "CONDITION", "BEGIN", "LOOP", "END", 
		"COLOR", "PALETTE", "RULE", "USER_ARGB", "USER_RATIONAL", "USER_INTEGER", 
		"USER_PATHOP_1POINTS", "USER_PATHOP_2POINTS", "USER_VARIABLE", "COMMENT", 
		"WHITESPACE"
	};


		private ASTBuilder builder = new ASTBuilder();
		
		public ASTBuilder getBuilder() { return builder; }


	public MandelbrotLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Mandelbrot.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 58: COMMENT_action((RuleContext)_localctx, actionIndex); break;
		}
	}
	private void COMMENT_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0:  break;

		case 1:  break;
		}
	}

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2>\u021f\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\3\2\3\2\3\3\3\3\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\b\3"+
		"\b\3\b\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\13\3\13\3\13\3\f\3\f\3\r\3\r\3\r"+
		"\3\r\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\21\3\21\3\22"+
		"\3\22\3\23\3\23\3\24\3\24\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\27\3\27"+
		"\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\32\3\32"+
		"\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3\33\3\34\3\34\3\34\3\35\3\35\3\36"+
		"\3\36\3\36\3\36\3\37\3\37\3 \3 \3!\3!\3\"\3\"\3#\3#\3#\3$\3$\3%\3%\3%"+
		"\3%\3%\3&\3&\3\'\3\'\3(\3(\3(\3(\3)\3)\3*\3*\3*\3*\3*\3*\3+\3+\3,\3,\3"+
		",\3,\3,\3,\3,\3,\3-\3-\3-\3-\3-\3-\3.\3.\3.\3.\3.\3/\3/\3/\3/\3/\3/\3"+
		"/\3/\3/\3/\3\60\3\60\3\60\3\60\3\60\3\60\3\61\3\61\3\61\3\61\3\61\3\62"+
		"\3\62\3\62\3\62\3\63\3\63\3\63\3\63\3\63\3\63\3\64\3\64\3\64\3\64\3\64"+
		"\3\64\3\64\3\64\3\65\3\65\3\65\3\65\3\65\3\66\3\66\3\66\3\66\3\66\3\66"+
		"\3\66\3\66\3\66\3\66\3\66\3\66\3\66\3\66\5\66\u014a\n\66\3\67\6\67\u014d"+
		"\n\67\r\67\16\67\u014e\3\67\3\67\7\67\u0153\n\67\f\67\16\67\u0156\13\67"+
		"\3\67\5\67\u0159\n\67\3\67\3\67\6\67\u015d\n\67\r\67\16\67\u015e\3\67"+
		"\5\67\u0162\n\67\3\67\6\67\u0165\n\67\r\67\16\67\u0166\3\67\3\67\3\67"+
		"\5\67\u016c\n\67\3\67\6\67\u016f\n\67\r\67\16\67\u0170\3\67\3\67\7\67"+
		"\u0175\n\67\f\67\16\67\u0178\13\67\3\67\3\67\3\67\3\67\5\67\u017e\n\67"+
		"\3\67\6\67\u0181\n\67\r\67\16\67\u0182\3\67\5\67\u0186\n\67\3\67\3\67"+
		"\6\67\u018a\n\67\r\67\16\67\u018b\3\67\3\67\3\67\3\67\5\67\u0192\n\67"+
		"\3\67\6\67\u0195\n\67\r\67\16\67\u0196\3\67\5\67\u019a\n\67\3\67\6\67"+
		"\u019d\n\67\r\67\16\67\u019e\3\67\3\67\3\67\3\67\5\67\u01a5\n\67\3\67"+
		"\6\67\u01a8\n\67\r\67\16\67\u01a9\3\67\5\67\u01ad\n\67\5\67\u01af\n\67"+
		"\38\68\u01b2\n8\r8\168\u01b3\39\39\39\39\39\39\39\39\39\39\39\39\39\3"+
		"9\39\39\39\39\39\39\39\39\39\39\39\39\39\39\39\39\39\39\39\39\39\39\3"+
		"9\39\39\39\39\39\39\59\u01e1\n9\3:\3:\3:\3:\3:\3:\3:\3:\3:\3:\3:\3:\3"+
		":\3:\3:\3:\3:\5:\u01f4\n:\3;\3;\7;\u01f8\n;\f;\16;\u01fb\13;\3<\3<\3<"+
		"\3<\7<\u0201\n<\f<\16<\u0204\13<\3<\5<\u0207\n<\3<\3<\3<\3<\3<\3<\7<\u020f"+
		"\n<\f<\16<\u0212\13<\3<\3<\3<\3<\5<\u0218\n<\3<\3<\3=\3=\3=\3=\3\u0210"+
		"\2>\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35"+
		"\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36"+
		";\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66k\67"+
		"m8o9q:s;u<w=y>\3\2\b\5\2\62;CHch\4\2GGgg\4\2C\\c|\5\2\62;C\\c|\4\2\f\f"+
		"\17\17\5\2\13\f\17\17\"\"\u0243\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2"+
		"\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2"+
		"\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2"+
		"\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2"+
		"\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2"+
		"\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2"+
		"\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O"+
		"\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2"+
		"\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2"+
		"\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u"+
		"\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\3{\3\2\2\2\5}\3\2\2\2\7\u0081\3\2\2\2\t"+
		"\u0083\3\2\2\2\13\u0085\3\2\2\2\r\u0087\3\2\2\2\17\u0089\3\2\2\2\21\u008e"+
		"\3\2\2\2\23\u0093\3\2\2\2\25\u0095\3\2\2\2\27\u0098\3\2\2\2\31\u009a\3"+
		"\2\2\2\33\u009e\3\2\2\2\35\u00a1\3\2\2\2\37\u00a5\3\2\2\2!\u00a8\3\2\2"+
		"\2#\u00aa\3\2\2\2%\u00ac\3\2\2\2\'\u00ae\3\2\2\2)\u00b0\3\2\2\2+\u00b4"+
		"\3\2\2\2-\u00b7\3\2\2\2/\u00bc\3\2\2\2\61\u00c1\3\2\2\2\63\u00c5\3\2\2"+
		"\2\65\u00cb\3\2\2\2\67\u00cf\3\2\2\29\u00d2\3\2\2\2;\u00d4\3\2\2\2=\u00d8"+
		"\3\2\2\2?\u00da\3\2\2\2A\u00dc\3\2\2\2C\u00de\3\2\2\2E\u00e0\3\2\2\2G"+
		"\u00e3\3\2\2\2I\u00e5\3\2\2\2K\u00ea\3\2\2\2M\u00ec\3\2\2\2O\u00ee\3\2"+
		"\2\2Q\u00f2\3\2\2\2S\u00f4\3\2\2\2U\u00fa\3\2\2\2W\u00fc\3\2\2\2Y\u0104"+
		"\3\2\2\2[\u010a\3\2\2\2]\u010f\3\2\2\2_\u0119\3\2\2\2a\u011f\3\2\2\2c"+
		"\u0124\3\2\2\2e\u0128\3\2\2\2g\u012e\3\2\2\2i\u0136\3\2\2\2k\u0149\3\2"+
		"\2\2m\u01ae\3\2\2\2o\u01b1\3\2\2\2q\u01e0\3\2\2\2s\u01f3\3\2\2\2u\u01f5"+
		"\3\2\2\2w\u0217\3\2\2\2y\u021b\3\2\2\2{|\7\61\2\2|\4\3\2\2\2}~\7e\2\2"+
		"~\177\7q\2\2\177\u0080\7u\2\2\u0080\6\3\2\2\2\u0081\u0082\7=\2\2\u0082"+
		"\b\3\2\2\2\u0083\u0084\7}\2\2\u0084\n\3\2\2\2\u0085\u0086\7?\2\2\u0086"+
		"\f\3\2\2\2\u0087\u0088\7\177\2\2\u0088\16\3\2\2\2\u0089\u008a\7c\2\2\u008a"+
		"\u008b\7u\2\2\u008b\u008c\7k\2\2\u008c\u008d\7p\2\2\u008d\20\3\2\2\2\u008e"+
		"\u008f\7o\2\2\u008f\u0090\7q\2\2\u0090\u0091\7f\2\2\u0091\u0092\7\64\2"+
		"\2\u0092\22\3\2\2\2\u0093\u0094\7`\2\2\u0094\24\3\2\2\2\u0095\u0096\7"+
		"k\2\2\u0096\u0097\7o\2\2\u0097\26\3\2\2\2\u0098\u0099\7A\2\2\u0099\30"+
		"\3\2\2\2\u009a\u009b\7u\2\2\u009b\u009c\7k\2\2\u009c\u009d\7p\2\2\u009d"+
		"\32\3\2\2\2\u009e\u009f\7>\2\2\u009f\u00a0\7?\2\2\u00a0\34\3\2\2\2\u00a1"+
		"\u00a2\7r\2\2\u00a2\u00a3\7q\2\2\u00a3\u00a4\7y\2\2\u00a4\36\3\2\2\2\u00a5"+
		"\u00a6\7\u0080\2\2\u00a6\u00a7\7A\2\2\u00a7 \3\2\2\2\u00a8\u00a9\7(\2"+
		"\2\u00a9\"\3\2\2\2\u00aa\u00ab\7*\2\2\u00ab$\3\2\2\2\u00ac\u00ad\7,\2"+
		"\2\u00ad&\3\2\2\2\u00ae\u00af\7.\2\2\u00af(\3\2\2\2\u00b0\u00b1\7r\2\2"+
		"\u00b1\u00b2\7j\2\2\u00b2\u00b3\7c\2\2\u00b3*\3\2\2\2\u00b4\u00b5\7t\2"+
		"\2\u00b5\u00b6\7g\2\2\u00b6,\3\2\2\2\u00b7\u00b8\7c\2\2\u00b8\u00b9\7"+
		"v\2\2\u00b9\u00ba\7c\2\2\u00ba\u00bb\7p\2\2\u00bb.\3\2\2\2\u00bc\u00bd"+
		"\7u\2\2\u00bd\u00be\7s\2\2\u00be\u00bf\7t\2\2\u00bf\u00c0\7v\2\2\u00c0"+
		"\60\3\2\2\2\u00c1\u00c2\7v\2\2\u00c2\u00c3\7c\2\2\u00c3\u00c4\7p\2\2\u00c4"+
		"\62\3\2\2\2\u00c5\u00c6\7c\2\2\u00c6\u00c7\7v\2\2\u00c7\u00c8\7c\2\2\u00c8"+
		"\u00c9\7p\2\2\u00c9\u00ca\7\64\2\2\u00ca\64\3\2\2\2\u00cb\u00cc\7o\2\2"+
		"\u00cc\u00cd\7q\2\2\u00cd\u00ce\7f\2\2\u00ce\66\3\2\2\2\u00cf\u00d0\7"+
		"@\2\2\u00d0\u00d1\7?\2\2\u00d18\3\2\2\2\u00d2\u00d3\7]\2\2\u00d3:\3\2"+
		"\2\2\u00d4\u00d5\7n\2\2\u00d5\u00d6\7q\2\2\u00d6\u00d7\7i\2\2\u00d7<\3"+
		"\2\2\2\u00d8\u00d9\7~\2\2\u00d9>\3\2\2\2\u00da\u00db\7>\2\2\u00db@\3\2"+
		"\2\2\u00dc\u00dd\7_\2\2\u00ddB\3\2\2\2\u00de\u00df\7@\2\2\u00dfD\3\2\2"+
		"\2\u00e0\u00e1\7>\2\2\u00e1\u00e2\7@\2\2\u00e2F\3\2\2\2\u00e3\u00e4\7"+
		"%\2\2\u00e4H\3\2\2\2\u00e5\u00e6\7c\2\2\u00e6\u00e7\7e\2\2\u00e7\u00e8"+
		"\7q\2\2\u00e8\u00e9\7u\2\2\u00e9J\3\2\2\2\u00ea\u00eb\7k\2\2\u00ebL\3"+
		"\2\2\2\u00ec\u00ed\7+\2\2\u00edN\3\2\2\2\u00ee\u00ef\7g\2\2\u00ef\u00f0"+
		"\7z\2\2\u00f0\u00f1\7r\2\2\u00f1P\3\2\2\2\u00f2\u00f3\7-\2\2\u00f3R\3"+
		"\2\2\2\u00f4\u00f5\7j\2\2\u00f5\u00f6\7{\2\2\u00f6\u00f7\7r\2\2\u00f7"+
		"\u00f8\7q\2\2\u00f8\u00f9\7v\2\2\u00f9T\3\2\2\2\u00fa\u00fb\7/\2\2\u00fb"+
		"V\3\2\2\2\u00fc\u00fd\7h\2\2\u00fd\u00fe\7t\2\2\u00fe\u00ff\7c\2\2\u00ff"+
		"\u0100\7e\2\2\u0100\u0101\7v\2\2\u0101\u0102\7c\2\2\u0102\u0103\7n\2\2"+
		"\u0103X\3\2\2\2\u0104\u0105\7q\2\2\u0105\u0106\7t\2\2\u0106\u0107\7d\2"+
		"\2\u0107\u0108\7k\2\2\u0108\u0109\7v\2\2\u0109Z\3\2\2\2\u010a\u010b\7"+
		"v\2\2\u010b\u010c\7t\2\2\u010c\u010d\7c\2\2\u010d\u010e\7r\2\2\u010e\\"+
		"\3\2\2\2\u010f\u0110\7e\2\2\u0110\u0111\7q\2\2\u0111\u0112\7p\2\2\u0112"+
		"\u0113\7f\2\2\u0113\u0114\7k\2\2\u0114\u0115\7v\2\2\u0115\u0116\7k\2\2"+
		"\u0116\u0117\7q\2\2\u0117\u0118\7p\2\2\u0118^\3\2\2\2\u0119\u011a\7d\2"+
		"\2\u011a\u011b\7g\2\2\u011b\u011c\7i\2\2\u011c\u011d\7k\2\2\u011d\u011e"+
		"\7p\2\2\u011e`\3\2\2\2\u011f\u0120\7n\2\2\u0120\u0121\7q\2\2\u0121\u0122"+
		"\7q\2\2\u0122\u0123\7r\2\2\u0123b\3\2\2\2\u0124\u0125\7g\2\2\u0125\u0126"+
		"\7p\2\2\u0126\u0127\7f\2\2\u0127d\3\2\2\2\u0128\u0129\7e\2\2\u0129\u012a"+
		"\7q\2\2\u012a\u012b\7n\2\2\u012b\u012c\7q\2\2\u012c\u012d\7t\2\2\u012d"+
		"f\3\2\2\2\u012e\u012f\7r\2\2\u012f\u0130\7c\2\2\u0130\u0131\7n\2\2\u0131"+
		"\u0132\7g\2\2\u0132\u0133\7v\2\2\u0133\u0134\7v\2\2\u0134\u0135\7g\2\2"+
		"\u0135h\3\2\2\2\u0136\u0137\7t\2\2\u0137\u0138\7w\2\2\u0138\u0139\7n\2"+
		"\2\u0139\u013a\7g\2\2\u013aj\3\2\2\2\u013b\u013c\t\2\2\2\u013c\u013d\t"+
		"\2\2\2\u013d\u013e\t\2\2\2\u013e\u013f\t\2\2\2\u013f\u0140\t\2\2\2\u0140"+
		"\u0141\t\2\2\2\u0141\u0142\t\2\2\2\u0142\u014a\t\2\2\2\u0143\u0144\t\2"+
		"\2\2\u0144\u0145\t\2\2\2\u0145\u0146\t\2\2\2\u0146\u0147\t\2\2\2\u0147"+
		"\u0148\t\2\2\2\u0148\u014a\t\2\2\2\u0149\u013b\3\2\2\2\u0149\u0143\3\2"+
		"\2\2\u014al\3\2\2\2\u014b\u014d\4\62;\2\u014c\u014b\3\2\2\2\u014d\u014e"+
		"\3\2\2\2\u014e\u014c\3\2\2\2\u014e\u014f\3\2\2\2\u014f\u0150\3\2\2\2\u0150"+
		"\u0154\7\60\2\2\u0151\u0153\4\62;\2\u0152\u0151\3\2\2\2\u0153\u0156\3"+
		"\2\2\2\u0154\u0152\3\2\2\2\u0154\u0155\3\2\2\2\u0155\u0158\3\2\2\2\u0156"+
		"\u0154\3\2\2\2\u0157\u0159\7\'\2\2\u0158\u0157\3\2\2\2\u0158\u0159\3\2"+
		"\2\2\u0159\u01af\3\2\2\2\u015a\u015c\7\60\2\2\u015b\u015d\4\62;\2\u015c"+
		"\u015b\3\2\2\2\u015d\u015e\3\2\2\2\u015e\u015c\3\2\2\2\u015e\u015f\3\2"+
		"\2\2\u015f\u0161\3\2\2\2\u0160\u0162\7\'\2\2\u0161\u0160\3\2\2\2\u0161"+
		"\u0162\3\2\2\2\u0162\u01af\3\2\2\2\u0163\u0165\4\62;\2\u0164\u0163\3\2"+
		"\2\2\u0165\u0166\3\2\2\2\u0166\u0164\3\2\2\2\u0166\u0167\3\2\2\2\u0167"+
		"\u0168\3\2\2\2\u0168\u0169\7\'\2\2\u0169\u016b\7\60\2\2\u016a\u016c\7"+
		"\60\2\2\u016b\u016a\3\2\2\2\u016b\u016c\3\2\2\2\u016c\u016e\3\2\2\2\u016d"+
		"\u016f\4\62;\2\u016e\u016d\3\2\2\2\u016f\u0170\3\2\2\2\u0170\u016e\3\2"+
		"\2\2\u0170\u0171\3\2\2\2\u0171\u0172\3\2\2\2\u0172\u0176\7\60\2\2\u0173"+
		"\u0175\4\62;\2\u0174\u0173\3\2\2\2\u0175\u0178\3\2\2\2\u0176\u0174\3\2"+
		"\2\2\u0176\u0177\3\2\2\2\u0177\u0179\3\2\2\2\u0178\u0176\3\2\2\2\u0179"+
		"\u017d\t\3\2\2\u017a\u017b\7-\2\2\u017b\u017c\7~\2\2\u017c\u017e\7/\2"+
		"\2\u017d\u017a\3\2\2\2\u017d\u017e\3\2\2\2\u017e\u0180\3\2\2\2\u017f\u0181"+
		"\4\62;\2\u0180\u017f\3\2\2\2\u0181\u0182\3\2\2\2\u0182\u0180\3\2\2\2\u0182"+
		"\u0183\3\2\2\2\u0183\u0185\3\2\2\2\u0184\u0186\7\'\2\2\u0185\u0184\3\2"+
		"\2\2\u0185\u0186\3\2\2\2\u0186\u01af\3\2\2\2\u0187\u0189\7\60\2\2\u0188"+
		"\u018a\4\62;\2\u0189\u0188\3\2\2\2\u018a\u018b\3\2\2\2\u018b\u0189\3\2"+
		"\2\2\u018b\u018c\3\2\2\2\u018c\u018d\3\2\2\2\u018d\u0191\t\3\2\2\u018e"+
		"\u018f\7-\2\2\u018f\u0190\7~\2\2\u0190\u0192\7/\2\2\u0191\u018e\3\2\2"+
		"\2\u0191\u0192\3\2\2\2\u0192\u0194\3\2\2\2\u0193\u0195\4\62;\2\u0194\u0193"+
		"\3\2\2\2\u0195\u0196\3\2\2\2\u0196\u0194\3\2\2\2\u0196\u0197\3\2\2\2\u0197"+
		"\u0199\3\2\2\2\u0198\u019a\7\'\2\2\u0199\u0198\3\2\2\2\u0199\u019a\3\2"+
		"\2\2\u019a\u01af\3\2\2\2\u019b\u019d\4\62;\2\u019c\u019b\3\2\2\2\u019d"+
		"\u019e\3\2\2\2\u019e\u019c\3\2\2\2\u019e\u019f\3\2\2\2\u019f\u01a0\3\2"+
		"\2\2\u01a0\u01a4\t\3\2\2\u01a1\u01a2\7-\2\2\u01a2\u01a3\7~\2\2\u01a3\u01a5"+
		"\7/\2\2\u01a4\u01a1\3\2\2\2\u01a4\u01a5\3\2\2\2\u01a5\u01a7\3\2\2\2\u01a6"+
		"\u01a8\4\62;\2\u01a7\u01a6\3\2\2\2\u01a8\u01a9\3\2\2\2\u01a9\u01a7\3\2"+
		"\2\2\u01a9\u01aa\3\2\2\2\u01aa\u01ac\3\2\2\2\u01ab\u01ad\7\'\2\2\u01ac"+
		"\u01ab\3\2\2\2\u01ac\u01ad\3\2\2\2\u01ad\u01af\3\2\2\2\u01ae\u014c\3\2"+
		"\2\2\u01ae\u015a\3\2\2\2\u01ae\u0164\3\2\2\2\u01ae\u0187\3\2\2\2\u01ae"+
		"\u019c\3\2\2\2\u01afn\3\2\2\2\u01b0\u01b2\4\62;\2\u01b1\u01b0\3\2\2\2"+
		"\u01b2\u01b3\3\2\2\2\u01b3\u01b1\3\2\2\2\u01b3\u01b4\3\2\2\2\u01b4p\3"+
		"\2\2\2\u01b5\u01b6\7O\2\2\u01b6\u01b7\7Q\2\2\u01b7\u01b8\7X\2\2\u01b8"+
		"\u01b9\7G\2\2\u01b9\u01ba\7V\2\2\u01ba\u01e1\7Q\2\2\u01bb\u01bc\7O\2\2"+
		"\u01bc\u01bd\7Q\2\2\u01bd\u01be\7X\2\2\u01be\u01bf\7G\2\2\u01bf\u01c0"+
		"\7V\2\2\u01c0\u01c1\7Q\2\2\u01c1\u01c2\7T\2\2\u01c2\u01c3\7G\2\2\u01c3"+
		"\u01e1\7N\2\2\u01c4\u01c5\7N\2\2\u01c5\u01c6\7K\2\2\u01c6\u01c7\7P\2\2"+
		"\u01c7\u01c8\7G\2\2\u01c8\u01c9\7V\2\2\u01c9\u01e1\7Q\2\2\u01ca\u01cb"+
		"\7N\2\2\u01cb\u01cc\7K\2\2\u01cc\u01cd\7P\2\2\u01cd\u01ce\7G\2\2\u01ce"+
		"\u01cf\7V\2\2\u01cf\u01d0\7Q\2\2\u01d0\u01d1\7T\2\2\u01d1\u01d2\7G\2\2"+
		"\u01d2\u01e1\7N\2\2\u01d3\u01d4\7C\2\2\u01d4\u01d5\7T\2\2\u01d5\u01d6"+
		"\7E\2\2\u01d6\u01d7\7V\2\2\u01d7\u01e1\7Q\2\2\u01d8\u01d9\7C\2\2\u01d9"+
		"\u01da\7T\2\2\u01da\u01db\7E\2\2\u01db\u01dc\7V\2\2\u01dc\u01dd\7Q\2\2"+
		"\u01dd\u01de\7T\2\2\u01de\u01df\7G\2\2\u01df\u01e1\7N\2\2\u01e0\u01b5"+
		"\3\2\2\2\u01e0\u01bb\3\2\2\2\u01e0\u01c4\3\2\2\2\u01e0\u01ca\3\2\2\2\u01e0"+
		"\u01d3\3\2\2\2\u01e0\u01d8\3\2\2\2\u01e1r\3\2\2\2\u01e2\u01e3\7E\2\2\u01e3"+
		"\u01e4\7W\2\2\u01e4\u01e5\7T\2\2\u01e5\u01e6\7X\2\2\u01e6\u01e7\7G\2\2"+
		"\u01e7\u01e8\7V\2\2\u01e8\u01f4\7Q\2\2\u01e9\u01ea\7E\2\2\u01ea\u01eb"+
		"\7W\2\2\u01eb\u01ec\7T\2\2\u01ec\u01ed\7X\2\2\u01ed\u01ee\7G\2\2\u01ee"+
		"\u01ef\7V\2\2\u01ef\u01f0\7Q\2\2\u01f0\u01f1\7T\2\2\u01f1\u01f2\7G\2\2"+
		"\u01f2\u01f4\7N\2\2\u01f3\u01e2\3\2\2\2\u01f3\u01e9\3\2\2\2\u01f4t\3\2"+
		"\2\2\u01f5\u01f9\t\4\2\2\u01f6\u01f8\t\5\2\2\u01f7\u01f6\3\2\2\2\u01f8"+
		"\u01fb\3\2\2\2\u01f9\u01f7\3\2\2\2\u01f9\u01fa\3\2\2\2\u01fav\3\2\2\2"+
		"\u01fb\u01f9\3\2\2\2\u01fc\u01fd\7\61\2\2\u01fd\u01fe\7\61\2\2\u01fe\u0202"+
		"\3\2\2\2\u01ff\u0201\n\6\2\2\u0200\u01ff\3\2\2\2\u0201\u0204\3\2\2\2\u0202"+
		"\u0200\3\2\2\2\u0202\u0203\3\2\2\2\u0203\u0206\3\2\2\2\u0204\u0202\3\2"+
		"\2\2\u0205\u0207\7\17\2\2\u0206\u0205\3\2\2\2\u0206\u0207\3\2\2\2\u0207"+
		"\u0208\3\2\2\2\u0208\u0209\7\f\2\2\u0209\u0218\b<\2\2\u020a\u020b\7\61"+
		"\2\2\u020b\u020c\7,\2\2\u020c\u0210\3\2\2\2\u020d\u020f\13\2\2\2\u020e"+
		"\u020d\3\2\2\2\u020f\u0212\3\2\2\2\u0210\u0211\3\2\2\2\u0210\u020e\3\2"+
		"\2\2\u0211\u0213\3\2\2\2\u0212\u0210\3\2\2\2\u0213\u0214\7,\2\2\u0214"+
		"\u0215\7\61\2\2\u0215\u0216\3\2\2\2\u0216\u0218\b<\3\2\u0217\u01fc\3\2"+
		"\2\2\u0217\u020a\3\2\2\2\u0218\u0219\3\2\2\2\u0219\u021a\b<\4\2\u021a"+
		"x\3\2\2\2\u021b\u021c\t\7\2\2\u021c\u021d\3\2\2\2\u021d\u021e\b=\4\2\u021e"+
		"z\3\2\2\2!\2\u0149\u014e\u0154\u0158\u015e\u0161\u0166\u016b\u0170\u0176"+
		"\u017d\u0182\u0185\u018b\u0191\u0196\u0199\u019e\u01a4\u01a9\u01ac\u01ae"+
		"\u01b3\u01e0\u01f3\u01f9\u0202\u0206\u0210\u0217\5\3<\2\3<\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}